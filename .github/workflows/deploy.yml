name: Deploy to server

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for version info)
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.GH_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            # 1) Go to app dir
            cd "${APP_DIR:-${{ secrets.APP_DIR }}}"

            # 2) Update repo
            git fetch --all --prune
            git reset --hard origin/main

            # 3) Show env (for debugging)
            ls -la .env || true
            echo "--- docker compose up ---"

            # 4) Build & run
            docker compose pull || true
            docker compose up -d --build

            # 5) Cleanup old images
            docker image prune -f || true

            # 6) Post-deploy healthcheck (local orchestrator)
            #    Fallback to localhost if ORCH_URL is not set in the server .env
            API_URL="${ORCH_URL:-http://localhost:8000}"

            echo "--- waiting orchestrator health at ${API_URL}/health ---"
            for i in {1..20}; do
              if curl -fsS "${API_URL}/health" >/dev/null; then
                echo "API OK"
                exit 0
              fi
              echo "waiting orchestrator... ($i/20)"
              sleep 2
            done

            echo "API FAIL"
            exit 1